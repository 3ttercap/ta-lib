import chai from 'chai'
const { assert } = chai

import sc from './index'

export default () => {
  describe('Input', () => {
    it('should throw error with wrong timeperiod param', () => {
      assert.throws(sc.bind(null, [], null), Error, 'Timeperiod should be a number!')
    })
    it('should throw error with wrong values', () => {
      assert.throws(sc.bind(null, [null], 1), Error, 'Input value should be a number!')
    })
  })
  describe('output', () => {
    let input = [110.46, 109.80, 110.17, 109.82, 110.15, 109.31, 109.05, 107.94, 107.76, 109.24, 109.40, 108.50, 107.96, 108.55, 108.85, 110.44, 109.89, 110.70, 110.79, 110.22, 110.00, 109.27, 106.69, 107.07, 107.92, 107.95, 107.70, 107.97, 106.09, 106.03, 107.65, 109.54, 110.26, 110.38, 111.94, 113.59, 113.98, 113.91, 112.62, 112.20, 111.10, 110.18, 111.13, 111.55, 112.08, 111.95, 111.60, 111.39, 112.25]
    let output = [NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, 0.1846689895, 0.2173913043, 0.3593495935, 0.1987480438, 0.2044025157, 0.1589310830, 0.1135135135, 0.3887323944, 0.4322396576, 0.1606557377, 0.0974025974, 0.1285475793, 0.1581569116, 0.1892583120, 0.1111111111, 0.3656387665, 0.3364055300, 0.4572864322, 0.6056701031, 0.5779310345, 0.2716763006, 0.0275229358, 0.4490566038, 0.4304291287, 0.4785714286, 0.5628742515, 0.6181102362, 0.5963855422, 0.6969050160, 0.6341212744, 0.3745928339, 0.0776699029, 0.1027154664, 0.1334093501, 0.0180878553, 0.2636655949, 0.3851132686, 0.3987341772, 0.0628183362]
    let result = eratio(input, 10)

    it('should return an array', () => {
      assert.isTrue(Array.isArray(result))
    })
    it('should return correct values', () => {
      for (let i = 0; i < input.length; ++i) {
        let delta = Math.abs(result[i] - output[i])
        let equal = isNaN(delta) ? true : delta < 0.0001
        assert.isTrue(equal)
      }
    })
    it('should skip NaN', () => {
      let input = [NaN, 110.46, 109.80, 110.17, 109.82, 110.15, 109.31, 109.05, 107.94, 107.76, 109.24, 109.40, 108.50, 107.96, 108.55, 108.85, 110.44, 109.89, 110.70, 110.79, 110.22, 110.00, 109.27, 106.69, 107.07, 107.92, 107.95, 107.70, 107.97, 106.09, 106.03, 107.65, 109.54, 110.26, 110.38, 111.94, 113.59, 113.98, 113.91, 112.62, 112.20, 111.10, 110.18, 111.13, 111.55, 112.08, 111.95, 111.60, 111.39, 112.25]
      let output = [NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, NaN, 0.1846689895, 0.2173913043, 0.3593495935, 0.1987480438, 0.2044025157, 0.1589310830, 0.1135135135, 0.3887323944, 0.4322396576, 0.1606557377, 0.0974025974, 0.1285475793, 0.1581569116, 0.1892583120, 0.1111111111, 0.3656387665, 0.3364055300, 0.4572864322, 0.6056701031, 0.5779310345, 0.2716763006, 0.0275229358, 0.4490566038, 0.4304291287, 0.4785714286, 0.5628742515, 0.6181102362, 0.5963855422, 0.6969050160, 0.6341212744, 0.3745928339, 0.0776699029, 0.1027154664, 0.1334093501, 0.0180878553, 0.2636655949, 0.3851132686, 0.3987341772, 0.0628183362]

      let result = eratio(input, 10)
      for (let i = 0; i < input.length; ++i) {
        let delta = Math.abs(result[i] - output[i])
        let equal = isNaN(delta) ? true : delta < 0.00001
        assert.isTrue(equal)
      }
    })

  })
}
